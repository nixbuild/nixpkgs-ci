name: CI/CD

on: push

env:
  WORKERS: 16

defaults:
  run:
    shell: bash

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.matrix.outputs.matrix}}
    steps:
      - uses: actions/checkout@v2
      - name: matrix
        id: matrix
        run: echo "::set-output name=matrix::$(./matrix.sh)"

  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    name: Worker ${{matrix.worker_idx}} of ${{matrix.workers}}
    steps:
      - uses: actions/checkout@v2
      - uses: nixbuild/nix-quick-install-action@v3
        with:
          nix_version: 3.0pre20200829_f156513
          nix_conf: |
            experimental-features = nix-command flakes
            max-silent-time = 1800
            timeout = 3600
      - uses: nixbuild/nixbuild-action@v1
        with:
          nixbuild_ssh_key: ${{secrets.nixbuild_ssh_key}}

      - name: eval nixpkgs
        id: eval-nixpkgs
        run: |
          mkdir "worker_${{matrix.worker_idx}}" && cd "$_"
          nix eval --json --apply "f: f ${{matrix.workers}} ${{matrix.worker_idx}}" ..#jobSubset | jq -c ".[]" > derivations.json
          # register a gc root for each derivation
          jq -r '.drvpath|values' derivations.json | xargs ln -sft /nix/var/nix/gcroots
          echo "::set-output name=drvcount::$(wc -l < derivations.json)"

      - name: build ${{steps.eval-nixpkgs.outputs.drvcount}} derivations
        working-directory: worker_${{matrix.worker_idx}}
        run: shuf derivations.json | nix shell ..#build-drv -c xargs -P8 -d'\n' -I DRV build-drv "DRV"

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: worker_${{matrix.worker_idx}}
          path: worker_${{matrix.worker_idx}}
